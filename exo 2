using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApplication2
{
    public interface ICompteBancaire
    {

        void accept( IVisitor visitor, int item) ;
        void accept(IVisitor visitor);


    }

    public class CCompteBancaire : ICompteBancaire
    {


        public double solde { get; set; }
        public List<double> transactions = new List<double>(20);

        void ICompteBancaire.accept(IVisitor visitor, int item)
        {
            visitor.visit(this, item);


        }
        void ICompteBancaire.accept(IVisitor visitor)
        {

            visitor.visit(this);

        }



    }
    public interface IVisitor
    {

        void visit(CCompteBancaire compte, int item);
        void visit(CCompteBancaire compte);

    }

    public class CDebitVisitor : IVisitor
    {
        void IVisitor.visit(CCompteBancaire compte, int item)
        {
            if (item<=0)
            { Console.WriteLine("vous pouvez debiter qu'un montant positif"); }
            else if (item <= compte.solde)
            {
                compte.solde -= item;
                if (compte.transactions.Count() < 20)
                {
                    compte.transactions.Add(-item);

                }
                else
                {
                    for (int i = 0; i < compte.transactions.Count() - 1; i++)
                    {
                        compte.transactions[i] = compte.transactions[i + 1];
                    }
                    compte.transactions[19] = -item;
                }
            }
            else
                Console.WriteLine("solde isuffisant");

        }
        void IVisitor.visit(CCompteBancaire compte)
        { }

    }
    public class CCreditVisitor : IVisitor
    {
        void IVisitor.visit(CCompteBancaire compte, int item)
        {
            if (item <= 0)
            { Console.WriteLine("vous pouvez crediter qu'un montant positif"); }
            else 
            {
                compte.solde += item;
                if (compte.transactions.Count() < 20)
                {
                    compte.transactions.Add(item);

                }
                else
                {
                    for (int i = 0; i < compte.transactions.Count() - 1; i++)
                    {
                        compte.transactions[i] = compte.transactions[i + 1];
                    }
                    compte.transactions[19] = item;
                }
            }

        }
        void IVisitor.visit(CCompteBancaire compte)
        { }

        }

    public class CHistoriqueVisitor : IVisitor
    {
        void IVisitor.visit(CCompteBancaire compte, int item)
        { }


            void IVisitor.visit(CCompteBancaire compte)
        {
            foreach( double i in compte.transactions)
            {
                Console.WriteLine(i);

            }
        }

    }

    class Program
    {
        static void Main(string[] args)
        {
            ICompteBancaire compte = new CCompteBancaire();
            IVisitor debit = new CDebitVisitor();
            IVisitor credit = new CCreditVisitor();
            IVisitor historique = new CHistoriqueVisitor();
            for (int i = 1; i < 21; i++)
            {
                compte.accept(credit, i);
            }

            compte.accept(credit, 25);


            compte.accept(debit, 19);


            compte.accept(historique);

        }

        }
    }
